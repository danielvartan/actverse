% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/state_prop.R
\name{state_prop}
\alias{state_prop}
\title{Compute the proportion of time spent in a specific state}
\usage{
state_prop(data, state_col = "state", state_values = c(1, 2))
}
\arguments{
\item{data}{A \code{\link[tsibble:tsibble]{tsibble}} object.}

\item{state_col}{(optional) A string indicating which column of \code{data} have
the states data (default: \code{"state"}).}

\item{state_values}{(optional) An
\code{\link[checkmate:checkIntegerish]{integerish}} vector indicating which state
values are considered as the target state(s) for calculating the proportion
(default: \code{c(1, 2)}).}
}
\value{
A \code{\link[tsibble:tsibble]{tsibble}} object with the following columns:
\itemize{
\item \code{time}: An \code{\link[hms:hms]{hms}} object representing the time of day.
\item \code{state}: A \code{\link[base:list]{list}} with a \code{\link[base:factor]{factor}} of the
state at each time point, indicating whether it is the target state or not.
\item \code{prop}: A \code{\link[base:numeric]{numeric}} vector representing the proportion
of time spent in the target state at each time point. This value is
calculated as the number of occurrences of the target state divided by
the total number of observations at that time point.
}
}
\description{
\code{state_prop()} computes the proportion of time spent in one or more specified
states from a \code{\link[tsibble:tsibble]{tsibble}} object. It quantifies the
fraction of time each day (or epoch) that the subject spends in the target
state(s), such as sleeping or awake, across the observed period.
}
\examples{
library(curl)
library(dplyr)
library(ggplot2)
library(scales)

if (has_internet()) {
  file <- get_from_zenodo(
    doi = "10.5281/zenodo.4898822",
    dir = tempdir(),
    file = "processed.txt"
  )

  data <- read_acttrust(file, tz = "America/Sao_Paulo")
  state_prop_data <- data |> state_prop() # Sleeping + Resting states

  state_prop_data |> print()

  state_prop_data |> pull(prop) |> summary() |> print()

  data |>
    actogram(
      col = "pim",
      days = -1,
      latitude = -23.55065,
      longitude = -46.63338,
      double_plot = TRUE
    )

  state_prop_data |>
    mutate(per = prop * 100) |>
    ggplot(ggplot2::aes(x = time, y = per)) +
    geom_smooth(color = "#FC2913") +
    labs(
      x = "Time of day (Hour)",
      y = "Percentage of time asleep (\%)",
    ) +
    scale_x_time(
      breaks = breaks_width("6 hours"),
      labels = label_time("\%-H") # Use "\%#H" for Windows
    ) +
    scale_y_continuous(limits = c(NA, 100)) +
    actverse:::get_actverse_theme()
}
}
\seealso{
Other sleep statistics functions: 
\code{\link{sri}()}
}
\concept{sleep statistics functions}
