% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_acttrust.R
\name{read_acttrust}
\alias{read_acttrust}
\title{Read, tidy, and validate an ActTrust file}
\usage{
read_acttrust(file = file.choose(), tz = "UTC", regularize = TRUE)
}
\arguments{
\item{file}{A string with the file path for the ActTrust data. If not
assigned, a dialog window will open allowing the user to browse and select
a file.}

\item{tz}{A string that specifies which time zone to parse the dates/time
with. The string must be a time zone that is recognized by the user's OS.
For more information see \code{\link[=OlsonNames]{?timezone}} (default: \code{"UTC"}).}

\item{regularize}{(optional) a \code{\link[=logical]{logical}} value indicating if the
function must correct irregular intervals (\strong{highly recommended}). See
more about it in the Details section (default: \code{TRUE}).}
}
\value{
A \link[tsibble:tsibble]{tsibble} object. The data structure can be
found in \code{\link[=acttrust]{?acttrust}}.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

\code{read_acttrust()} allows you to read, tidy, and validate an ActTrust file in
a consistent and easy manner. You can see the output data structure in
\code{\link[=acttrust]{?acttrust}}.

ActTrust is a trademark of
\href{https://www.condorinst.com.br/}{Condor Instruments Ltda}.
}
\details{
\subsection{Requirements}{

\code{read_acttrust()} requires the \code{\link[readr:readr-package]{readr}} package. If
you don't already have it installed, you can install it with:

\if{html}{\out{<div class="sourceCode">}}\preformatted{install.packages("readr")
}\if{html}{\out{</div>}}
}

\subsection{\code{Regularize} parameter}{

It's common to find some uneven epochs/intervals in ActTrust data files. This
occurs because the actigraph internal clock can go off by some seconds while
recording and can become an issue while doing some computations. By using
\code{regularize == TRUE}, \code{read_acttrust()} find and correct those
irregularities.

It's important to note that this process will only work if a clear
epoch/periodicity can be found in the data. Regularization is made by
aggregating the values between epochs, averaging values for numeric variables
and assigning the most frequent value (mode) for single integer or other type
of variables.

Any gap found in the time series will be assign as \code{NA}, with a \code{state}
value of \code{9}.
}

\subsection{Offwrist data}{

\code{read_acttrust()} will transform any offwrist data (data with
\code{state == 4}) into missing data (\code{NA}). They will still going to be
classified as offwrist in the \code{state} variable.
}

\subsection{Data wrangling}{

The process of \emph{tiding} a dataset is understood as transforming it in input
data, like described in Loo and Jonge (2018). It's a very similar process of
tiding data described in the workflow proposed by Wickham and Grolemund
(n.d.).

The process of \emph{validating} a dataset is understood as detecting invalid
data, by checking whether data satisfies certain assumptions from domain
knowledge, to then,  removing or, if possible, fixing them. This process can
be considered as part of the process of transforming data, described in the
workflow proposed by Wickham and Grolemund (n.d.).

To learn more about the concept of tidy data, see Wickham (2014) and Wickham
and Grolemund (n.d.). You can find more about data validation and error
location in Loo and Jonge (2018).
}
}
\examples{
read_acttrust(raw_data("acttrust.txt"))
}
\references{
Van der Loo, M., & De Jonge, E. (2018).
\emph{Statistical data cleaning with applications in R}. Hooboken, NJ: John
Wiley & Sons. \doi{10.1002/9781118897126}.

Wickham, H. (2014). Tidy Data. \emph{Journal of Statistical Software}, \emph{59}(10),
1-23. \doi{10.18637/jss.v059.i10}.

Wickham, H., & Grolemund, G. (n.d.). \emph{R for data science}. Sebastopol, CA:
O'Reilly Media. \url{https://r4ds.had.co.nz}
}
\seealso{
Other utility functions: 
\code{\link{aggregate_index}()},
\code{\link{find_epoch}()},
\code{\link{raw_data}()},
\code{\link{write_acttrust}()}
}
\concept{utility functions}
