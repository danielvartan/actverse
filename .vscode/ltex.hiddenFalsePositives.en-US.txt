{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qactverse 0.1.0\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qactverse 0.0.0.9000\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q# actverse <a href = \"https://danielvartan.github.io/brandr/\"><img src = \"man/figures/logo.png\" align=\"right\" width=\"120\" /></a>\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q# actverse <a href = \"https://danielvartan.github.io/brandr/\"><img src = \"man/figures/logo.png\" align=\"right\" width=\"120\" /></a>\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```{r}\n#| label: setup\n#| include: false\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qsource(here::here(\"R\", \".setup.\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qsource(here::here(\"R\", \".setup.\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QR\"))\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\QR\"))\n```\\E$"}
{"rule":"DASH_RULE","sentence":"^\\Q<!-- badges: start -->\n[![Project Status: Active - The project has reached a stable, usable state and is being actively developed.](https://img.shields.io/badge/Repo%20Status-Active-10D810.svg)](https://www.repostatus.org/#active)\n[![R-CMD-check.yaml](https://github.com/danielvartan/actverse/actions/workflows/check-standard.yaml/badge.svg)](https://github.com/danielvartan/actverse/actions/workflows/check-standard.yaml)\n[![Codecov test coverage](https://codecov.io/gh/danielvartan/actverse/branch/main/graph/badge.svg)](https://app.codecov.io/gh/danielvartan/actverse?branch=main)\n[![License: MIT](https://img.shields.io/badge/License-MIT-10D810.svg)](https://choosealicense.com/licenses/mit/)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg)](https://www.contributor-covenant.org/version/2/1/code_of_conduct/)\n<!-- badges: end -->\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q<!-- badges: start -->\n[![Project Status: Active - The project has reached a stable, usable state and is being actively developed.](https://img.shields.io/badge/Repo%20Status-Active-10D810.svg)](https://www.repostatus.org/#active)\n[![R-CMD-check.yaml](https://github.com/danielvartan/actverse/actions/workflows/check-standard.yaml/badge.svg)](https://github.com/danielvartan/actverse/actions/workflows/check-standard.yaml)\n[![Codecov test coverage](https://codecov.io/gh/danielvartan/actverse/branch/main/graph/badge.svg)](https://app.codecov.io/gh/danielvartan/actverse?branch=main)\n[![License: MIT](https://img.shields.io/badge/License-MIT-10D810.svg)](https://choosealicense.com/licenses/mit/)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg)](https://www.contributor-covenant.org/version/2/1/code_of_conduct/)\n<!-- badges: end -->\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```r\nremotes::install_github(\"danielvartan/actverse\")\n```\\E$"}
{"rule":"GITHUB","sentence":"^\\Q```r\nremotes::install_github(\"danielvartan/actverse\")\n```\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q* `read_acttrust()`: Read, tidy, and validate an [ActTrust](https://condorinst.com/en/acttrust-actigraph/) file.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q* `write_acttrust()`: Write a `tsibble` to a readable [ActTrust](https://condorinst.com/en/acttrust-actigraph/) file.\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```{r}\n#| message: false\n#| warning: false\\E$"}
{"rule":"ARROWS","sentence":"^\\Qfile <-\n  get_from_zenodo(\n    doi = \"10.5281/zenodo.4898822\",\n    path = tempdir(),\n    file = \"processed.txt\"\n  )\n```\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qfile <-\n  get_from_zenodo(\n    doi = \"10.5281/zenodo.4898822\",\n    path = tempdir(),\n    file = \"processed.txt\"\n  )\n```\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qfile <-\n  get_from_zenodo(\n    doi = \"10.5281/zenodo.4898822\",\n    path = tempdir(),\n    file = \"processed.txt\"\n  )\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qfile <-\n  get_from_zenodo(\n    doi = \"10.5281/zenodo.4898822\",\n    path = tempdir(),\n    file = \"processed.txt\"\n  )\n```\\E$"}
{"rule":"ARROWS","sentence":"^\\Qdata <- file |> read_acttrust(tz = \"America/Sao_Paulo\")\n```\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qdata <- file |> read_acttrust(tz = \"America/Sao_Paulo\")\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qdata <- file |> read_acttrust(tz = \"America/Sao_Paulo\")\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```{r}\nlibrary(dplyr)\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qdata |> glimpse()\n```\\E$"}
{"rule":"DASH_RULE","sentence":"^\\Q- `periodogram()`: Compute Sokolove & Bushell's $\\chi^{2}$ periodogram.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q- `periodogram()`: Compute Sokolove & Bushell's $\\chi^{2}$ periodogram.\\E$"}
{"rule":"DASH_RULE","sentence":"^\\Q- `spectrogram()`: Compute a spectrogram based on Sokolove & Bushell's periodogram.\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```{r}\n#| message: false\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qdata |> periodogram(\"pim\")\n```\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qdata |> periodogram(\"pim\")\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qdata |> spectrogram(\"pim\")\n```\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qdata |> spectrogram(\"pim\")\n```\\E$"}
{"rule":"DASH_RULE","sentence":"^\\Q- `actogram()`: Create an actogram plot from actigraphy data.\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```{r}\n#| message: false\n#| warning: false\n#| fig-width: 9\n#| fig-height: 8\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qdata |>\n  actogram(\n    col = \"pim\",\n    days = 7,\n    latitude = -23.55065,\n    longitude = -46.63338,\n    double_plot = TRUE\n  )\n```\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qdata |>\n  actogram(\n    col = \"pim\",\n    days = 7,\n    latitude = -23.55065,\n    longitude = -46.63338,\n    double_plot = TRUE\n  )\n```\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qdata |>\n  actogram(\n    col = \"pim\",\n    days = 7,\n    latitude = -23.55065,\n    longitude = -46.63338,\n    double_plot = TRUE\n  )\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qdata |>\n  actogram(\n    col = \"pim\",\n    days = 7,\n    latitude = -23.55065,\n    longitude = -46.63338,\n    double_plot = TRUE\n  )\n```\\E$"}
{"rule":"DASH_RULE","sentence":"^\\Q- `na_approx()` `na_locf()` `na_overall_mean()` `na_overall_median()` `na_overall_mode()` `na_spline()` `na_weekly_mean()` `na_zero()` `na_plot()`:  Interpolate missing values in a numeric vector.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q- `na_approx()` `na_locf()` `na_overall_mean()` `na_overall_median()` `na_overall_mode()` `na_spline()` `na_weekly_mean()` `na_zero()` `na_plot()`:  Interpolate missing values in a numeric vector.\\E$"}
{"rule":"WORD_CONTAINS_UNDERSCORE","sentence":"^\\Q- `na_approx()` `na_locf()` `na_overall_mean()` `na_overall_median()` `na_overall_mode()` `na_spline()` `na_weekly_mean()` `na_zero()` `na_plot()`:  Interpolate missing values in a numeric vector.\\E$"}
{"rule":"DASH_RULE","sentence":"^\\Q- `na_approx()` `na_locf()` `na_overall_mean()` `na_overall_median()` `na_overall_mode()` `na_spline()` `na_weekly_mean()` `na_zero()` `na_plot()`: Interpolate missing values in a numeric vector.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q- `na_approx()` `na_locf()` `na_overall_mean()` `na_overall_median()` `na_overall_mode()` `na_spline()` `na_weekly_mean()` `na_zero()` `na_plot()`: Interpolate missing values in a numeric vector.\\E$"}
{"rule":"WORD_CONTAINS_UNDERSCORE","sentence":"^\\Q- `na_approx()` `na_locf()` `na_overall_mean()` `na_overall_median()` `na_overall_mode()` `na_spline()` `na_weekly_mean()` `na_zero()` `na_plot()`: Interpolate missing values in a numeric vector.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qx <- c(NA, 1, 5, 10, NA, 5, 10, 1, NA, 10, 1, 5, NA, NA)\nindex <- seq(as.\\E$"}
{"rule":"ARROWS","sentence":"^\\Qx <- c(NA, 1, 5, 10, NA, 5, 10, 1, NA, 10, 1, 5, NA, NA)\nindex <- seq(as.\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QDate(\"2020-01-01\"), as.\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\QDate(\"2020-01-01\"), as.\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QDate(\"2020-01-14\"), by = \"day\")\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\QDate(\"2020-01-14\"), by = \"day\")\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qna_approx(x, index, fill_na_tips = TRUE)\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qna_approx(x, index, fill_na_tips = TRUE)\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```{r}\n#| fig-width: 8\n#| fig-height: 6\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qna_plot(x, index, na_approx(x, index, fill_na_tips = TRUE))\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qna_plot(x, index, na_approx(x, index, fill_na_tips = TRUE))\n```\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q* `get_from_zenodo()`: Get data from a Zenodo record.\\E$"}
{"rule":"WORD_CONTAINS_UNDERSCORE","sentence":"^\\Q* `get_sun_stats()`: Get sun related statistics from different APIs.\\E$"}
{"rule":"WORD_CONTAINS_UNDERSCORE","sentence":"^\\Qget_sun_stats(\n  latitude = -23.5489,\n  longitude = -46.6388,\n  tz = \"America/Sao_Paulo\"\n) |>\n  rutils:::list_as_tibble() |>\n  print(n = Inf)\n```\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qget_sun_stats(\n  latitude = -23.5489,\n  longitude = -46.6388,\n  tz = \"America/Sao_Paulo\"\n) |>\n  rutils:::list_as_tibble() |>\n  print(n = Inf)\n```\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qget_sun_stats(\n  latitude = -23.5489,\n  longitude = -46.6388,\n  tz = \"America/Sao_Paulo\"\n) |>\n  rutils:::list_as_tibble() |>\n  print(n = Inf)\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qget_sun_stats(\n  latitude = -23.5489,\n  longitude = -46.6388,\n  tz = \"America/Sao_Paulo\"\n) |>\n  rutils:::list_as_tibble() |>\n  print(n = Inf)\n```\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qget_sun_stats(\n  latitude = -23.5489,\n  longitude = -46.6388,\n  tz = \"America/Sao_Paulo\"\n) |>\n  rutils:::list_as_tibble() |>\n  print(n = Inf)\n```\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qfile |>\n  read_acttrust(regularize = FALSE) |>\n  find_epoch()\n```\\E$"}
{"rule":"WORD_CONTAINS_UNDERSCORE","sentence":"^\\Qfile |>\n  read_acttrust(regularize = FALSE) |>\n  find_epoch()\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qfile |>\n  read_acttrust(regularize = FALSE) |>\n  find_epoch()\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```{r}\ncitation(\"actverse\")\n```\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q<br>\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```{r}\n#| label: readme-periodogram\n#| message: false\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q```{r}\n#| label: readme-periodogram\n#| message: false\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```{r}\n#| label: readme-spectrogram\n#| message: false\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q```{r}\n#| label: readme-spectrogram\n#| message: false\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```{r}\n#| label: readme-actogram\n#| message: false\n#| warning: false\n#| fig-width: 12\n#| fig-height: 12\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q```{r}\n#| label: readme-actogram\n#| message: false\n#| warning: false\n#| fig-width: 12\n#| fig-height: 12\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qdata |>\n  actogram(\n    col = \"pim\",\n    days = Inf,\n    latitude = -23.55065,\n    longitude = -46.63338,\n    double_plot = TRUE\n  )\n```\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qdata |>\n  actogram(\n    col = \"pim\",\n    days = Inf,\n    latitude = -23.55065,\n    longitude = -46.63338,\n    double_plot = TRUE\n  )\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Qdata |>\n  actogram(\n    col = \"pim\",\n    days = Inf,\n    latitude = -23.55065,\n    longitude = -46.63338,\n    double_plot = TRUE\n  )\n```\\E$"}
{"rule":"EN_QUOTES","sentence":"^\\Q```{r}\n#| label: readme-na-approx\n#| message: false\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q```{r}\n#| label: readme-na-approx\n#| message: false\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\\E$"}
{"rule":"FIRST_OF_ALL","sentence":"^\\QFirst of all, thank you for considering a contribution to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q!\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QDon't let others have the same experience and report it as an issue on GitHub so we can fix it.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QOpen the project in RStudio or other IDE of your choice.\\E$"}
